

Accountant:
- asgi.py

"""
ASGI config for Accountant project.
It exposes the ASGI callable as a module-level variable named ``application``.
For more information on this file, see
https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/
"""
import os
from django.core.asgi import get_asgi_application
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Accountant.settings')
application = get_asgi_application()

- settings.py

"""
Django settings for Accountant project.
Generated by 'django-admin startproject' using Django 3.1.7.
For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ak54e@pv(^m@nx60ng3=yi)zo49-mn+h+ja+2+g6*4h8hb_aa$'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []
# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'accounting',
    'userPages',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'Accountant.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'Accountant.wsgi.application'
# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Accountant',
        'USER': 'accountant',
        'PASSWORD': 'VjqLbgkjv',
        'HOST': 'localhost',
    }
}
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
import os
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"
STATICFILES_DIRS = [BASE_DIR / "static", ]
LOGIN_REDIRECT_URL = '/'
- urls.py

"""diploma URL Configuration
The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static
urlpatterns = [
    path('admin/', admin.site.urls, name ='admin'),
    path('accounting/', include('accounting.urls'), name ='accounting'),
    path('user/', include('django.contrib.auth.urls'), name ='auth'),
    path('user/', include('userPages.urls'), name ='userPages'),
    path('', include('main.urls'), name ='main'),
]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

- wsgi.py

"""
WSGI config for Accountant project.
It exposes the WSGI callable as a module-level variable named ``application``.
For more information on this file, see
https://docs.djangoproject.com/en/3.1/howto/deployment/wsgi/
"""
import os
from django.core.wsgi import get_wsgi_application
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Accountant.settings')
application = get_wsgi_application()



accounting:
- models.py

from django.db import models
from django.contrib.auth.models import User
from django.utils.timezone import now
class Bank(models.Model):
    name = models.CharField('Название', max_length=50, unique=True)
    image = models.ImageField(upload_to='BanksPictures', default='BanksPictures/default.png')
    def __str__(self):
        return f'{self.name}'
    class Meta:
        verbose_name = 'Банк'
        verbose_name_plural = 'Банки'
class Contract(models.Model):
    CONTRACT_TYPES = (
        ('B', 'Банковский'),
        ('I', 'Инвестиционный')
    )
    CURRENCY_TYPES = (
        ('RUB', 'Российский рубль'),
        ('USD', 'Доллар США'),
        ('EUR', 'Евро'),
        ('GBP', 'Фунт стерлингов Великобритании'),
        ('JPY', 'Японская йена'),
        ('CHF', 'Швейцарский франк'),
        ('CNY', 'Китайский юань'),
    )
    bankID = models.ForeignKey(Bank, on_delete=models.CASCADE)
    userID = models.ForeignKey(User, on_delete=models.CASCADE)
    name = models.CharField('Название', max_length=50)
    currency = models.CharField('Базовая валюта', max_length=3, choices=CURRENCY_TYPES, default='RUB')
    type = models.CharField('Тип договора', max_length=1, choices=CONTRACT_TYPES)
    image = models.ImageField(upload_to='ContractsPictures', default='ContractsPictures/default.jpg')
    def __str__(self):
        return f'{self.name} : {self.type}'
    class Meta:
        verbose_name = 'Договор'
        verbose_name_plural = 'Договоры'
class Stock(models.Model):
    STOCK_TYPES = (
        ('Action', 'Акция'),
        ('Bond', 'Облигация'),
        ('ETF', 'ETF'),
        ('Currency', 'Валюта'),
        ('Other', 'Другое')
    )
    CURRENCY_TYPES = (
        ('RUB', 'Российский рубль'),
        ('USD', 'Доллар США'),
        ('EUR', 'Евро'),
        ('GBP', 'Фунт стерлингов Великобритании'),
        ('JPY', 'Японская йена'),
        ('CHF', 'Швейцарский франк'),
        ('CNY', 'Китайский юань'),
    )
    type = models.CharField('Тип ценной бумаги', max_length=8, choices=STOCK_TYPES)
    tiker = models.CharField('Тикер', max_length=10)
    name = models.CharField('Название', max_length=50)
    currency = models.CharField('Базовая валюта', max_length=3, choices=CURRENCY_TYPES, default='RUB')
    currentPrice = models.FloatField('текущая цена', null=True)
    def __str__(self):
        return f'{self.tikerCode} : {self.currentPrice}'
    class Meta:
        verbose_name = 'Ценная бумага'
        verbose_name_plural = 'Ценные бумаги'
class FinancialInstrument(models.Model):
    FINANCIAL_INSTRUMENT_TYPES = (
        ('B', 'Банковский'),
        ('I', 'Инвестиционный'),
        ('C', 'Валюта')
    )
    CURRENCY_TYPES = (
        ('RUB', '₽'),
        ('USD', '$'),
        ('EUR', '€'),
        ('GBP', '£'),
        ('JPY', '¥'),
        ('CHF', '₣'),
        ('CNY', '¥'),
    )
    contractID = models.ForeignKey(Contract, on_delete=models.CASCADE)
    stockID = models.ForeignKey(Stock, null=True, on_delete=models.CASCADE)
    name = models.CharField('Название', max_length=50)
    type = models.CharField('Тип финансового инструмента', max_length=1, choices=FINANCIAL_INSTRUMENT_TYPES)
    balance = models.FloatField('Баланс счёта', default=0)
    amount = models.FloatField('Количество', default=0)
    avgPrice = models.FloatField('Текущая цена', default=0)
    currency = models.CharField('Базовая валюта', max_length=3, choices=CURRENCY_TYPES, default='RUB')
    def __str__(self):
        return f'{self.name} : {self.type}'
    class Meta:
        verbose_name = 'Финансовый инструмент'
        verbose_name_plural = 'Финансовые инструменты'
class Category(models.Model):
    CATEGORY_TYPES = (
        ('S', 'Расходы'),
        ('I', 'Доходы'),
        ('T', 'Переводы')
    )
    userID = models.ForeignKey(User, on_delete=models.CASCADE)
    name = models.CharField('Название', max_length=50)
    type = models.CharField('Тип категории', max_length=1, choices=CATEGORY_TYPES, default='S')
    picture = models.ImageField(upload_to='CategoryPictures', default='CategoryPictures/default.jpg')
    def __str__(self):
        return f'{self.name} : {self.type}'
    class Meta:
        verbose_name = 'Категория транзакции'
        verbose_name_plural = 'Категории транзакции'
class Operation(models.Model):
    OPERATION_TYPES = (
        ('S', 'Spending'),
        ('I', 'Income'),
        ('T', 'Transfer'),
        ('BS', 'Buying a stock'),
        ('SS', 'Sale of stock'),
        ('DIV', 'Dividends')
    )
    CURRENCY_TYPES = (
        ('RUB', 'Российский рубль'),
        ('USD', 'Доллар США'),
        ('EUR', 'Евро'),
        ('GBP', 'Фунт стерлингов Великобритании'),
        ('JPY', 'Японская йена'),
        ('CHF', 'Швейцарский франк'),
        ('CNY', 'Китайский юань'),
    )
    parentOperationID = models.ForeignKey('self', on_delete=models.CASCADE, null=True)
    fromFinancialInstrumentID = models.ForeignKey(FinancialInstrument, related_name='fromFinancialInstrument', on_delete=models.CASCADE)
    toFinancialInstrumentID = models.ForeignKey(FinancialInstrument, related_name='toFinancialInstrument', on_delete=models.CASCADE, null=True)
    categoryID = models.ForeignKey(Category, related_name='toCategory', on_delete=models.CASCADE, null=True)
    type = models.CharField('Тип операции', max_length=5, choices=OPERATION_TYPES)
    sum = models.FloatField('Сумма сделки', default=0)
    dateTime = models.DateTimeField('Дата и время совершения сделки', default=now)
    currency = models.CharField('Базовая валюта', max_length=3, choices=CURRENCY_TYPES, default='RUB')
    def __str__(self):
        return f'{self.type} : {self.sum} : {self.currency}'
    class Meta:
        verbose_name = 'Операция'
        verbose_name_plural = 'Операции'

- apps.py

from django.apps import AppConfig
class AccountingConfig(AppConfig):
    name = 'accounting'

- forms.py

from .models import Bank, FinancialInstrument
from django.forms import ModelForm, TextInput, ImageField
class BankForm(ModelForm):
    class Meta:
        model = Bank
        fields = ['name', 'image']
        widgets = {
            'name': TextInput(attrs={
                'class': "form-control",
                'placeholder': "Название банка"
            }),
        }
class Bank(ModelForm):
    class Meta:
        model = FinancialInstrument
        fields = ['name', 'currency']

- operations.py

import django.db.models
from accounting.models import Bank, Contract, FinancialInstrument, Operation, Category, Stock
from yahoo_fin.stock_info import get_live_price as stockPrice
def getStockPrice(stock):
    if stock.currency == 'RUB':
        return stockPrice(stock.tiker + '.me')
    return stockPrice(stock.tiker)
def getCurrencyCoeff(fromCurrency, toCurrency):
    if fromCurrency != toCurrency:
        return stockPrice(f'{fromCurrency}{toCurrency}=X')
    else:
        return 1
def addBankAccount(request, bankName, FIName, FICurrency, FIBalance):
    try:
        bankObj = Bank.objects.get(name=bankName)
    except Bank.DoesNotExist:
        bankObj = Bank(name=bankName)
        bankObj.save()
    try:
        contractObj = Contract.objects.filter(userID=request.user).get(bankID=bankObj)
    except Contract.DoesNotExist:
        contractObj = Contract(bankID=bankObj, userID=request.user, name=f'Договор с банком {bankName}',
                               currency=FICurrency, type='B')
        contractObj.save()
    financialInstrumentObj = FinancialInstrument(contractID=contractObj, name=FIName, type='B',
                                                 currency=FICurrency, balance=FIBalance)
    financialInstrumentObj.save()
def addBrokerAccount(request, brokerName, accountName, accountCurrency, accountBalance):
    bankQuerySet = Bank.objects.filter(name=brokerName)
    if len(bankQuerySet) == 0:
        bankObj = Bank(name=brokerName)
        bankObj.save()
    else:
        bankObj = bankQuerySet[0]
    contractObj = Contract(bankID=bankObj, userID=request.user, name=accountName,
                           currency=accountCurrency, type='I')
    contractObj.save()
    financialInstrumentObj = FinancialInstrument(contractID=contractObj, name=accountCurrency, type='C',
                                                 currency=accountCurrency, balance=accountBalance)
    financialInstrumentObj.save()
def addOperation(request, FIObj, opCategory, opCurrency, opSum, type='S'):
    opSum = float(opSum)
    try:
        categoryQuerySet = Category.objects.filter(name=opCategory).filter(type=type).get(userID=request.user)
    except Category.DoesNotExist:
        categoryObj = Category(name=opCategory, userID=request.user, type=type)
        categoryObj.save()
    operationObj = Operation(fromFinancialInstrumentID=FIObj, categoryID=categoryObj,
                             currency=opCurrency, sum=opSum, type=type)
    operationObj.save()
    coeff = 1 if type == 'S' else -1
    FIObj.balance -= coeff * opSum * getCurrencyCoeff(opCurrency, FIObj.currency)
    FIObj.save()
def addInvestOperation(contractName, currency, sum, type, tiker):
    contractObj = Contract.objects.filter(name=contractName)[0]
    allStocks = FinancialInstrument.objects.filter(contractID=contractObj)
    balance = allStocks.objects.filter(name=currency)
    if len(balance) == 0:
        balance = allStocks.objects.filter(name=contractObj.currency)
        sum *= getCurrencyCoeff(currency, balance.currency)
    else:
        balance = balance[0]
    if type == 'BS':
        balance.amount -= sum
        stockForSale = allStocks.objects.filter(stockID__tiker=tiker)
        #if
    elif type == 'SS':
        balance.amount += sum
def addTransfer(senderFIObj, receiverFIObj, transferSum):
    transferSum = float(transferSum)
    operationObj = Operation(type='T', sum=transferSum,
                             fromFinancialInstrumentID=senderFIObj, toFinancialInstrumentID=receiverFIObj,
                             currency=senderFIObj.currency)
    senderFIObj.balance -= transferSum
    receiverFIObj.balance += transferSum * getCurrencyCoeff(senderFIObj.currency, receiverFIObj.currency)
    senderFIObj.save()
    receiverFIObj.save()
    operationObj.save()
def getUserOperations(request):
    if request.user.is_authenticated:
        operations = Operation.objects.filter(fromFinancialInstrumentID__contractID__userID=request.user)
    else:
        operations = []
    return operations
def getBankAccounts(request):
    if request.user.is_authenticated:
        bankAccounts = FinancialInstrument.objects.filter(contractID__userID=request.user).filter(type='B')
    else:
        bankAccounts = []
    return bankAccounts
def bankAccountFormat(bankAccounts):
    colors = []
    CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
    for account in bankAccounts:
        if account.balance > 0:
            color = 'green'
        elif account.balance < 0:
            color = 'red'
        else:
            color = 'info'
        colors.append(color)
        account.balance = floatFormating(account.balance)
        account.currency = CURRENCY_TYPES[account.currency]
    return bankAccounts, colors
def getBrokerAccountBalance(account):
    balance = 0
    actives = FinancialInstrument.objects.filter(contractID=account)
    stocks = actives.filter(type='I')
    moneyAccounts = actives.filter(type='C')
    for stock in stocks:
        balance += stock.amount * getStockPrice(stock.stockID) * getCurrencyCoeff(stock.stockID.currency, account.currency)
    for moneyAccount in moneyAccounts:
        balance += moneyAccount.balance * getCurrencyCoeff(moneyAccount.currency, account.currency)
    return balance
def getBrokerAccountBalanceStructureCurrency(account):
    currencys = set()
    balance = 0
    actives = FinancialInstrument.objects.filter(contractID=account)
    stocks = actives.filter(type='I')
    moneyAccounts = actives.filter(type='C')
    for stock in stocks:
        balance += stock.amount * getStockPrice(stock.stockID) * getCurrencyCoeff(stock.stockID.currency, account.currency)
    for moneyAccount in moneyAccounts:
        balance += moneyAccount.balance * getCurrencyCoeff(moneyAccount.currency, account.currency)
        currencys.add(moneyAccount.currency)
    return balance, stocks, moneyAccounts, currencys
def getBrokerAccounts(request):
    if request.user.is_authenticated:
        brokerAccounts = Contract.objects.filter(userID=request.user).filter(type='I')
    else:
        brokerAccounts = []
    balances = [getBrokerAccountBalance(account) for account in brokerAccounts]
    return brokerAccounts, balances
def brokerAccountsFormat(brokerAccounts, balances):
    CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
    balancesFormat = [floatFormating(balance) + ' ' + CURRENCY_TYPES[account.currency]
                      for account, balance in zip(brokerAccounts, balances)]
    return brokerAccounts, balancesFormat
def getAccountStocks(brokerAccount):
    FinancialInstrument.objects.filter(contractID=brokerAccount)
def addCurrencyToBrokerAccount(account, currency):
    nuwCurr = FinancialInstrument(contractID=account, name=currency, currency=currency, type='C')
    nuwCurr.save()
def addStockOperation(account, buyTiker, buyQuantity, buyAvgPrice, buyCurrency, type='buy'):
    buyAvgPrice = float(buyAvgPrice)
    buyQuantity = float(buyQuantity)
    buyQuantity *= 1 if type == 'buy' else -1
    type = 'BS' if type == 'buy' else 'SS'
    try:
        stock = Stock.objects.get(tiker=buyTiker)
    except Stock.DoesNotExist:
        stock = Stock(tiker=buyTiker, currency=buyCurrency)
        stock.save()
    financialInstruments = FinancialInstrument.objects.filter(contractID=account)
    totalSumm = buyAvgPrice * buyQuantity
    try:
        stockFI = financialInstruments.get(stockID__tiker=buyTiker)
        total = stockFI.amount * stockFI.avgPrice + totalSumm
        stockFI.amount += buyQuantity
        stockFI.avgPrice = total / stockFI.amount
    except FinancialInstrument.DoesNotExist:
        stockFI = FinancialInstrument(contractID=account, stockID=stock, name=buyTiker, type='I', amount=buyQuantity,
                                      avgPrice=buyAvgPrice, currency=buyCurrency)
    stockFI.save()
    try:
        balance = financialInstruments.get(name=buyCurrency)
    except FinancialInstrument.DoesNotExist:
        balance = financialInstruments.get(name=account.currency)
        totalSumm *= getCurrencyCoeff(buyCurrency, balance.currency)
    balance.balance -= totalSumm
    balance.save()
    investOperation = Operation(fromFinancialInstrumentID=balance, toFinancialInstrumentID=stockFI, type=type, sum=-totalSumm, currency=balance.currency)
    investOperation.save()
def getBankAccountOperations(financialInstrument):
    operatonsFrom = Operation.objects.filter(fromFinancialInstrumentID=financialInstrument)
    operatonsTo = Operation.objects.filter(toFinancialInstrumentID=financialInstrument)
    operations = operatonsFrom | operatonsTo
    operations = operations.order_by('-dateTime')
    CURRENCY_TYPES = dict(financialInstrument.CURRENCY_TYPES)
    for operation in operations:
        operation.sum = floatFormating(operation.sum)
        operation.currency = CURRENCY_TYPES[operation.currency]
    return operations
def getAllSpending(request):
    if not request.user.is_authenticated:
        return []
    else:
        operations = Operation.objects.filter(fromFinancialInstrumentID__contractID__userID=request.user).filter(type='S')
        CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
        operations = operations.order_by('-dateTime')
        for operation in operations:
            operation.sum = floatFormating(operation.sum)
            operation.currency = CURRENCY_TYPES[operation.currency]
        return operations
def getAllIncomes(request):
    if not request.user.is_authenticated:
        return []
    else:
        operations = Operation.objects.filter(fromFinancialInstrumentID__contractID__userID=request.user).filter(type='I')
        CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
        operations = operations.order_by('-dateTime')
        for operation in operations:
            operation.sum = floatFormating(operation.sum)
            operation.currency = CURRENCY_TYPES[operation.currency]
        return operations
def getAccountsForTransfer(request):
    if not request.user.is_authenticated:
        return []
    else:
        accounts = FinancialInstrument.objects.filter(contractID__userID=request.user)
        bankAccounts = accounts.filter(type='B')
        brokerAccounts = accounts.filter(type='C')
        accounts = bankAccounts | brokerAccounts
        return accounts.order_by('type')
def getTotalBalance(request, bankAccounts, brokerAccounts, brokerBalances, currency='RUB'):
    if not request.user.is_authenticated:
        return
    else:
        balance = 0
        for account in bankAccounts:
            balance += account.balance * getCurrencyCoeff(account.currency, currency)
        for account, brokerBalance in zip(brokerAccounts, brokerBalances):
            balance += brokerBalance * getCurrencyCoeff(account.currency, currency)
        return balance
def totalBalanceFormat(balance, currency='RUB'):
    if balance > 0:
        color = 'green'
    elif balance < 0:
        color = 'red'
    else:
        color = 'info'
    CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
    return floatFormating(balance) + ' ' + CURRENCY_TYPES[currency], color
def getCurrencySymbols(QuerySet):
    currencySymbols = dict(FinancialInstrument.CURRENCY_TYPES)
    for object in QuerySet:
        object.currency = currencySymbols[object.currency]
    return QuerySet
def getContractStocksInfo(contract, stocks, moneyAccounts):
    pks = []
    names = []
    amounts = []
    currentValues = []
    priceDeltas = []
    earnings = []
    isProfitable = []
    CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
    print(stocks)
    for moneyAccount in moneyAccounts:
        pks.append(moneyAccount.pk)
        names.append(moneyAccount.name)
        amounts.append(floatFormating(moneyAccount.amount + moneyAccount.balance) + ' ' + CURRENCY_TYPES[moneyAccount.currency])
        currentValues.append(floatFormating((moneyAccount.amount + moneyAccount.balance) * getCurrencyCoeff(moneyAccount.currency, contract.currency)) + ' ' + CURRENCY_TYPES[contract.currency])
        if moneyAccount.amount == 0:
            priceDeltas.append('-')
            earnings.append('-')
            isProfitable.append('-')
        else:
            currentPrice = getStockPrice(moneyAccount.stockID.tiker)
            priceDelta = moneyAccount.avgPrice - currentPrice
            priceDeltas.append(floatFormating(abs(priceDelta) / moneyAccount.avgPrice * 100))
            earnings.append(floatFormating(moneyAccount.amount * abs(priceDelta)))
            isProfitable.append(True if priceDelta >= 0 else False)
    for stock in stocks:
        pks.append(stock.pk)
        names.append(stock.name)
        amounts.append(floatFormating(stock.amount))
        currentValues.append(floatFormating(stock.amount * getStockPrice(stock.stockID) * getCurrencyCoeff(stock.currency, contract.currency)) + ' ' + CURRENCY_TYPES[contract.currency])
        currentPrice = getStockPrice(stock.stockID)
        priceDelta = currentPrice - stock.avgPrice
        priceDeltas.append(floatFormating(abs(priceDelta) / stock.avgPrice * 100))
        earnings.append(floatFormating(stock.amount * abs(priceDelta) * getCurrencyCoeff(stock.currency, contract.currency)) + ' ' + CURRENCY_TYPES[contract.currency])
        isProfitable.append(True if priceDelta >= 0 else False)
    return zip(pks, names, amounts, currentValues, priceDeltas, isProfitable, earnings)
def floatFormating(a):
    sign = ''
    if a < 0:
        sign = '-'
        a *= -1
    if int(a) != a:
        a = format(a, '.2f')
        a = str(a)
        a1, a2 = a.split('.')
        l1 = len(a1)
        for i in range(l1 - 3, 0, -3):
            a11 = a1[:i]
            a12 = a1[i:]
            a1 = a11 + ' ' + a12
        return sign + a1 + '.' + a2
    else:
        a = format(a, '.0f')
        a1 = str(a)
        l1 = len(a1)
        for i in range(l1 - 3, 0, -3):
            a11 = a1[:i]
            a12 = a1[i:]
            a1 = a11 + ' ' + a12
        return sign + a1
def accBallanceList(accounts):
    CURRENCY_TYPES = dict(FinancialInstrument.CURRENCY_TYPES)
    for account in accounts:
        account.balance = floatFormating(account.balance) + ' ' + CURRENCY_TYPES[account.currency]
    return accounts

- admin.py

from django.contrib import admin
from accounting.models import Bank, Contract, Stock, FinancialInstrument, Operation, Category
admin.site.register(Bank)
admin.site.register(Contract)
admin.site.register(Stock)
admin.site.register(FinancialInstrument)
admin.site.register(Operation)
admin.site.register(Category)

- tests.py

from django.test import TestCase
# Create your tests here.

- urls.py

"""diploma URL Configuration
The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URL conf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.urls import path
from . import views
urlpatterns = [
    path('bank-accounts/', views.bankAccountsView, name='bank-accounts-page'),
    path('broker-accounts/', views.brokerAccountsView, name='broker-accounts-page'),
    path('bank-accounts/<int:pk>', views.bankAccountView, name='bank-accounts'),
    path('broker-accounts/<int:pk>', views.brokerAccountView, name='broker-accounts'),
    path('new-account', views.newAccountView, name='new-account'),
]

- views.py

from django.shortcuts import render, redirect, get_object_or_404
from accounting.operations import addBankAccount, addOperation, addTransfer, getUserOperations, getBankAccounts, \
    floatFormating, getBankAccountOperations, getCurrencySymbols, getAccountsForTransfer, accBallanceList, \
    getAllSpending, getAllIncomes, addBrokerAccount, getBrokerAccounts, bankAccountFormat, brokerAccountsFormat, \
    getBrokerAccountBalanceStructureCurrency, addCurrencyToBrokerAccount, addStockOperation, getContractStocksInfo, \
    getTotalBalance, totalBalanceFormat
from accounting.models import FinancialInstrument, Category, Operation, Contract, Bank
def bankAccountView(request, pk):
    if request.user.is_anonymous:
        return redirect('login')
    bankAccount = get_object_or_404(FinancialInstrument.objects.filter(contractID__userID=request.user), pk=pk)
    if request.method == 'POST' and request.user.is_authenticated:
        if 'opSum' in request.POST:
            opCurrency = request.POST['opCurrency']
            opCategory = request.POST['opCategory']
            opSum = request.POST['opSum']
            addOperation(request, bankAccount, opCategory, opCurrency, opSum, type='S')
        if 'incSum' in request.POST:
            opCurrency = request.POST['incCurrency']
            opCategory = request.POST['incCategory']
            opSum = request.POST['incSum']
            addOperation(request, bankAccount, opCategory, opCurrency, opSum, type='I')
        if 'transSum' in request.POST:
            transSum = request.POST['transSum']
            toAcc = request.POST['toAcc']
            addTransfer(bankAccount, FinancialInstrument.objects.get(pk=toAcc), transSum)
    balance = floatFormating(bankAccount.balance)
    categories = Category.objects.filter(userID=request.user)
    spendingsCategories = categories.filter(type='S')
    incomeCategories = categories.filter(type='I')
    operations = getBankAccountOperations(bankAccount)
    symbol = dict(FinancialInstrument.CURRENCY_TYPES)[bankAccount.currency]
    CURRENCY_TYPES = FinancialInstrument.CURRENCY_TYPES
    #operations = getCurrencySymbols(operations)
    accounts = getAccountsForTransfer(request)
    context = {'bankAccount': bankAccount, 'balance': balance, 'CURRENCY_TYPES': CURRENCY_TYPES,
               'spendingsCategories': spendingsCategories, 'incomeCategories': incomeCategories,
               'operations': operations, 'symbol': symbol, 'accounts': accounts, 'operationsLen': len(operations)}
    return render(request, 'accounting/BankAccount.html', context=context)
def brokerAccountView(request, pk):
    if request.user.is_anonymous:
        return redirect('login')
    account = get_object_or_404(Contract.objects.filter(userID=request.user), pk=pk)
    if request.method == 'POST' and request.user.is_authenticated:
        if 'buyTiker' in request.POST:
            buyTiker = request.POST['buyTiker']
            buyQuantity = request.POST['buyQuantity']
            buyAvgPrice = request.POST['buyAvgPrice']
            buyCurrency = request.POST['buyCurrency']
            addStockOperation(account, buyTiker, buyQuantity, buyAvgPrice, buyCurrency, type='buy')
        if 'sellTiker' in request.POST:
            sellTiker = request.POST['sellTiker']
            sellQuantity = request.POST['sellQuantity']
            sellAvgPrice = request.POST['sellAvgPrice']
            sellCurrency = request.POST['sellCurrency']
            addStockOperation(account, sellTiker, sellQuantity, sellAvgPrice, sellCurrency, type='sell')
        if 'transSum' in request.POST:
            transSum = request.POST['transSum']
            fromAcc = request.POST['fromAcc']
            toAcc = request.POST['toAcc']
            addTransfer(FinancialInstrument.objects.get(pk=fromAcc), FinancialInstrument.objects.get(pk=toAcc), transSum)
        if 'addCurrency' in request.POST:
            currency = request.POST['addCurrency']
            addCurrencyToBrokerAccount(account, currency)
    balance, stocks, money, currencys = getBrokerAccountBalanceStructureCurrency(account)
    account, balance = brokerAccountsFormat((account,), (balance,))
    account = account[0]
    balance = balance[0]
    CURRENCY_TYPES = FinancialInstrument.CURRENCY_TYPES
    accountsForTransfer = getAccountsForTransfer(request)
    stocksTable = getContractStocksInfo(account, stocks, money)
    context = {'account': account, 'balance': balance, 'CURRENCY_TYPES': CURRENCY_TYPES, 'stocks': stocks,
               'money': money, 'moneyQ': len(money), 'accountsForTransfer': accountsForTransfer, 'currencys': currencys,
               'stocksTable': stocksTable}
    return render(request, 'accounting/brokerAccount.html', context=context)
def newAccountView(request):
    if request.user.is_anonymous:
        return redirect('login')
    if request.method == 'POST' and request.user.is_authenticated:
        if 'bsName' in request.POST:
            bsName = request.POST['bsName']
            bsBalance = request.POST['bsBalance']
            bsCurrency = request.POST['bsCurrency']
            bankName = request.POST['bankName']
            addBankAccount(request, bankName, bsName, bsCurrency, bsBalance)
        if 'isName' in request.POST:
            isName = request.POST['isName']
            isBalance = request.POST['isBalance']
            isCurrency = request.POST['isCurrency']
            brokerName = request.POST['brokerName']
            addBrokerAccount(request, brokerName, isName, isCurrency, isBalance)
    banks = Bank.objects.all()
    CURRENCY_TYPES = FinancialInstrument.CURRENCY_TYPES
    bankAccounts = getBankAccounts(request)
    bankAccountsNum = len(bankAccounts)
    brokerAccounts, balances = getBrokerAccounts(request)
    brokerAccountsNum = len(brokerAccounts)
    brokerAccounts, balances = brokerAccountsFormat(brokerAccounts, balances)
    bankAccounts, colors = bankAccountFormat(bankAccounts)
    brokerAccountsBalance = zip(brokerAccounts, balances)
    bankAccountsColor = zip(bankAccounts, colors)
    context = {'banks': banks, 'CURRENCY_TYPES': CURRENCY_TYPES, 'bankAccountsNum': bankAccountsNum,
               'brokerAccountsNum': brokerAccountsNum, 'bankAccountsColor': bankAccountsColor, 'brokerAccountsBalance': brokerAccountsBalance}
    return render(request, 'accounting/newAccount.html', context=context)
def bankAccountsView(request):
    if request.user.is_anonymous:
        return redirect('login')
    bankAccounts = getBankAccounts(request)
    bankAccountsNum = len(bankAccounts)
    accountsNum = bankAccountsNum
    if accountsNum >= 2:
        totalBalance = getTotalBalance(request, bankAccounts, [], [])
        totalBalance, totalBalanceColor = totalBalanceFormat(totalBalance)
    else:
        totalBalance = None
        totalBalanceColor = None
    bankAccounts, colors = bankAccountFormat(bankAccounts)
    bankAccountsColor = zip(bankAccounts, colors)
    incomes = getAllIncomes(request)
    spendings = getAllSpending(request)
    title = 'Банковские счета'
    context = {'totalBalance': totalBalance, 'totalBalanceColor': totalBalanceColor, 'bankAccounts': bankAccountsColor, 'accountsNum': accountsNum,
               'spendings': spendings, 'incomes': incomes, 'title': title, 'bankActive': 'active'}
    return render(request, 'accounting/accounts.html', context=context)
def brokerAccountsView(request):
    if request.user.is_anonymous:
        return redirect('login')
    brokerAccounts, brokerBalances = getBrokerAccounts(request)
    brokerAccountsNum = len(brokerAccounts) + (1 if brokerAccounts[0].currency != 'RUB' else 0)
    accountsNum = brokerAccountsNum
    if accountsNum >= 2:
        totalBalance = getTotalBalance(request, [], brokerAccounts, brokerBalances)
        totalBalance, totalBalanceColor = totalBalanceFormat(totalBalance)
    else:
        totalBalance = None
        totalBalanceColor = None
    brokerAccounts, brokerBalances = brokerAccountsFormat(brokerAccounts, brokerBalances)
    brokerAccountsBalance = zip(brokerAccounts, brokerBalances)
    print(brokerAccounts, brokerBalances)
    title = 'Брокерские счета'
    context = {'totalBalance': totalBalance, 'totalBalanceColor': totalBalanceColor,
               'brokerAccountsNum': brokerAccountsNum, #'bankAccountsColor': bankAccountsColor,
               'brokerAccountsBalance': brokerAccountsBalance, 'accountsNum': accountsNum, 'brokerActive': 'active',
               'title': title}
    return render(request, 'accounting/accounts.html', context=context)


main:
- models.py

from django.db import models
# Create your models here.

- apps.py

from django.apps import AppConfig
class MainConfig(AppConfig):
    name = 'main'

- admin.py

from django.contrib import admin
# Register your models here.

- tests.py

from django.test import TestCase
# Create your tests here.

- urls.py

"""diploma URL Configuration
The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.urls import path
from . import views
urlpatterns = [
    path('', views.index, name='main'),
]

- views.py

from django.shortcuts import render, redirect, get_object_or_404
from accounting.operations import addBankAccount, addOperation, addTransfer, getUserOperations, getBankAccounts, \
    floatFormating, getBankAccountOperations, getCurrencySymbols, getAccountsForTransfer, accBallanceList, \
    getAllSpending, getAllIncomes, getBrokerAccounts, bankAccountFormat, brokerAccountsFormat, getTotalBalance,\
    totalBalanceFormat
from accounting.models import FinancialInstrument, Category, Operation
def index(request):
    if request.user.is_anonymous:
        return redirect('login')
    bankAccounts = getBankAccounts(request)
    bankAccountsNum = len(bankAccounts)
    brokerAccounts, brokerBalances = getBrokerAccounts(request)
    brokerAccountsNum = len(brokerAccounts)
    accountsNum = bankAccountsNum + brokerAccountsNum
    if accountsNum >= 2:
        totalBalance = getTotalBalance(request, bankAccounts, brokerAccounts, brokerBalances)
        totalBalance, totalBalanceColor = totalBalanceFormat(totalBalance)
    else:
        totalBalance = None
        totalBalanceColor = None
    brokerAccounts, brokerBalances = brokerAccountsFormat(brokerAccounts, brokerBalances)
    bankAccounts, colors = bankAccountFormat(bankAccounts)
    brokerAccountsBalance = zip(brokerAccounts, brokerBalances)
    bankAccountsColor = zip(bankAccounts, colors)
    incomes = getAllIncomes(request)
    spendings = getAllSpending(request)
    context = {'totalBalance': totalBalance, 'totalBalanceColor': totalBalanceColor, 'bankAccounts': bankAccountsColor, 'brokerAccountsBalance':brokerAccountsBalance, 'accountsNum': accountsNum,
               'spendings': spendings, 'incomes': incomes}
    return render(request, 'accounts.html', context=context)



userPages:
- models.py

from django.db import models
# Create your models here.

- apps.py

from django.apps import AppConfig
class UserpagesConfig(AppConfig):
    name = 'userPages'

- forms.py

from django.contrib.auth.models import User
from django.forms import ModelForm, TextInput, PasswordInput
class LoginForm(ModelForm):
    class Meta:
        model = User
        fields = ['login', 'password']
        widgets = {
            'login': TextInput(attrs={
                'class': "form-control",
                'placeholder': "Логин"
            }),
            'password': PasswordInput(attrs={
                'class': "form-control",
                'placeholder': "Пароль"
            })
        }
- admin.py

from django.contrib import admin
# Register your models here.

- tests.py

from django.test import TestCase
# Create your tests here.

- urls.py

"""diploma URL Configuration
The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.urls import path
from . import views
urlpatterns = [
    path('', views.index, name='index'),
    path('registration', views.registration, name='registration'),
    path('logout', views.logoutRedirect, name='logout'),
]

- views.py

from django.shortcuts import render, redirect
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth import authenticate, login, logout
def index(request):
    return redirect('/')
def registration(request):
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        if form.is_valid():
            logout(request)
            form.save()
            username = form.cleaned_data['username']
            password = form.cleaned_data['password1']
            user = authenticate(username=username, password=password)
            login(request, user)
            return redirect('index')
    else:
        form = UserCreationForm()
    context = {'form': form}
    return render(request, 'registration/registration.html', context=context)
def logoutRedirect(request):
    logout(request)
    return redirect('/')



templates:
- accounts.html

<!DOCTYPE html>
{% load static %}
<html lang="ru">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="Start your development with a Dashboard for Bootstrap 4.">
  <meta name="author" content="Creative Tim">
  <title>{% block title %}Главная страница{% endblock %} | Accountant</title>
  <!-- Favicon -->
  <link rel="icon" href="{% static "main/img/brand/favicon.png" %}" type="image/png">
  <!-- Fonts -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700">
  <!-- Icons -->
  <link rel="stylesheet" href="{% static "main/vendor/nucleo/css/nucleo.css" %}" type="text/css">
  <link rel="stylesheet" href="{% static "main/vendor/@fortawesome/fontawesome-free/css/all.min.css" %}" type="text/css">
  <!-- Page plugins -->
  <!-- Argon CSS -->
  <link rel="stylesheet" href="{% static "main/css/argon.css" %}" type="text/css">
</head>
<body>
  <!-- Sidenav -->
  <nav class="sidenav navbar navbar-vertical  fixed-left  navbar-expand-xs navbar-light bg-white" id="sidenav-main">
    <div class="scrollbar-inner">
      <!-- Brand -->
      <div class="sidenav-header  align-items-center">
        <a class="navbar-brand" href="{% url 'main' %}">
          <img src="{% static "main/img/brand/blue.png" %}" class="navbar-brand-img" alt="...">
        </a>
      </div>
      <div class="navbar-inner">
        <!-- Collapse -->
        <div class="collapse navbar-collapse" id="sidenav-collapse-main">
          <!-- Nav items -->
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link {% block mainActive %}active{% endblock %}" href="{% url 'main' %}">
                <i class="fas fa-home text-primary"></i>
                <span class="nav-link-text">Главная</span>
              </a>
            </li>
            {% if not user.is_authenticated %}
            <li class="nav-item">
              <a class="nav-link" href="{% url 'login' %}">
                <i class="ni ni-key-25 text-primary"></i>
                <span class="nav-link-text">Войти</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="{% url 'registration' %}">
                <i class="ni ni-circle-08 text-primary"></i>
                <span class="nav-link-text">Зарегистрироваться</span>
              </a>
            </li>
            {% else %}
            <li class="nav-item">
              <a class="nav-link {% block bankAccounts %}{% endblock %}" href="{% url 'bank-accounts-page' %}">
                <i class="ni ni-briefcase-24 text-primary"></i>
                <span class="nav-link-text">Банковские счета</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link {% block brokerAccounts %}{% endblock %}" href="{% url 'broker-accounts-page' %}">
                <i class="ni ni-chart-bar-32 text-primary"></i>
                <span class="nav-link-text">Брокерские счета</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="ni ni-single-02 text-primary"></i>
                <span class="nav-link-text">Профиль</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="ni ni-settings-gear-65 text-primary"></i>
                <span class="nav-link-text">Настройки</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="{% url 'logout' %}">
                <i class="ni ni-user-run text-primary"></i>
                <span class="nav-link-text">Выйти</span>
              </a>
            </li>
            {% endif %}
          </ul>
          </ul>
        </div>
      </div>
    </div>
  </nav>
  <!-- Main content -->
  <div class="main-content" id="panel">
    <!-- Topnav -->
    <nav class="navbar navbar-top navbar-expand navbar-dark bg-primary">
      <div class="container-fluid">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <nav aria-label="breadcrumb" class="d-none d-md-inline-block ml-md-4">
                <ol class="breadcrumb breadcrumb-links breadcrumb-dark">
                  <li class="breadcrumb-item"><a href="/"><i class="fas fa-home"></i></a></li>
                    {% block breadCrumb %}{% endblock %}
                  <!--<li class="breadcrumb-item"><a href="#">Components</a></li>
                  <li class="breadcrumb-item active" aria-current="page">Icons</li>-->
                </ol>
              </nav>
          <div class="col-lg-6 col-6 text-left">
            <a href="{% url 'new-account' %}" class="btn btn-sm btn-neutral">Новый счёт</a>
            <a href="#" class="btn btn-sm btn-neutral">Фильтры</a>
          </div>
          <!-- Navbar links -->
          <ul class="navbar-nav align-items-center  ml-md-auto ">
            <li class="nav-item d-xl-none">
              <!-- Sidenav toggler -->
              <div class="pr-3 sidenav-toggler sidenav-toggler-dark" data-action="sidenav-pin" data-target="#sidenav-main">
                <div class="sidenav-toggler-inner">
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                </div>
              </div>
            </li>
          </ul>
            {% if user.is_authenticated %}
              <ul class="navbar-nav align-items-center  ml-auto ml-md-0 ">
                <li class="nav-item dropdown">
                  <a class="nav-link pr-0" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <div class="media align-items-center">
                      <span class="avatar avatar-sm rounded-circle">
                        <img alt="Image placeholder" src="/media/me-round.png">
                      </span>
                      <div class="media-body  ml-2  d-none d-lg-block">
                        <span class="mb-0 text-sm  font-weight-bold">Иван Днепров</span>
                      </div>
                    </div>
                  </a>
                 <div class="dropdown-menu dropdown-menu-right">
                    <a href="#!" class="dropdown-item">
                      <i class="ni ni-single-02"></i>
                      <span>Профиль</span>
                    </a>
                    <a href="#!" class="dropdown-item">
                      <i class="ni ni-settings-gear-65"></i>
                      <span>Настройки</span>
                    </a>
                    <a href="{% url 'logout' %}" class="dropdown-item">
                      <i class="ni ni-user-run"></i>
                      <span>Выйти</span>
                    </a>
                  </div>
                </li>
              </ul>
          {% endif %}
        </div>
      </div>
    </nav>
    <!-- Header -->
    <!-- Header -->
    <div class="header bg-primary pb-6">
      <div class="container-fluid">
        <div class="header-body">
          <!-- Card stats -->
          <div class="row">
              {% if accountsNum >= 2 %}
                <div class="col-xl-3 col-md-6">
                  <div class="card card-stats">
                    <!-- Card body -->
                        <div class="card-body">
                          <div class="row">
                            <div class="col">
                              <h5 class="card-title text-uppercase text-black mb-0">Всего денег</h5>
                              <span class="h2 font-weight-bold mb-0 text-{{ totalBalanceColor }}">{{ totalBalance }}</span>
                            </div>
                            <div class="col-auto">
                              <div class="icon icon-shape bg-gradient-red text-white rounded-circle shadow">
                                <i class="ni ni-diamond"></i>
                              </div>
                            </div>
                          </div>
                          <!--<p class="mt-3 mb-0 text-sm">
                            <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                            <span class="text-black">За прошлый месяц</span>
                          </p>-->
                        </div>
                  </div>
                </div>
              {% endif %}
          {% for account, color in bankAccounts %}
                <div class="col-xl-3 col-md-6">
                  <div class="card card-stats">
                    <!-- Card body -->
                    <a href="{% url 'bank-accounts' account.pk %}">
                        <div class="card-body">
                          <div class="row">
                            <div class="col">
                              <h5 class="card-title text-uppercase text-muted mb-0">Банк: {{ account.contractID.bankID.name }}</h5>
                              <h5 class="card-title text-uppercase text-black mb-0">{{ account.name }}</h5>
                              <span class="h2 font-weight-bold mb-0 text-{{ color }}">{{ account.balance }} {{ account.currency }}</span>
                            </div>
                            <div class="col-auto">
                              <div class="icon icon-shape bg-gradient-green text-white rounded-circle shadow">
                                <i class="ni ni-briefcase-24"></i>
                              </div>
                            </div>
                          </div>
                          <!--<p class="mt-3 mb-0 text-sm">
                            <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                            <span class="text-black">За прошлый месяц</span>
                          </p>-->
                        </div>
                    </a>
                  </div>
                </div>
            {% endfor %}
            {% for account, balance in brokerAccountsBalance %}
                <div class="col-xl-3 col-md-6">
                  <div class="card card-stats">
                    <!-- Card body -->
                    <a href="{% url 'broker-accounts' account.pk %}">
                        <div class="card-body">
                          <div class="row">
                            <div class="col">
                              <h5 class="card-title text-uppercase text-muted mb-0">Брокер: {{ account.bankID.name }}</h5>
                              <h5 class="card-title text-uppercase text-black mb-0">{{ account.name }}</h5>
                              <span class="h2 font-weight-bold mb-0 text-black">{{ balance }}</span>
                            </div>
                            <div class="col-auto">
                              <div class="icon icon-shape bg-gradient-info text-white rounded-circle shadow">
                                <i class="ni ni-chart-bar-32"></i>
                              </div>
                            </div>
                          </div>
                          <!--<p class="mt-3 mb-0 text-sm">
                            <span class="text-success mr-2"><i class="fa fa-arrow-up"></i> 3.48%</span>
                            <span class="text-black">За прошлый месяц</span>
                          </p>-->
                        </div>
                    </a>
                  </div>
                </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
    <!-- Page content -->
    <div class="container-fluid mt--6">
      <div class="row">
        <div class="col-xl-8" hidden>
          <div class="card bg-default">
            <div class="card-header bg-transparent">
              <div class="row align-items-center">
                <div class="col">
                  <h6 class="text-light text-uppercase ls-1 mb-1">Overview</h6>
                  <h5 class="h3 text-white mb-0">Стоимость активов</h5>
                </div>
                <div class="col">
                  <ul class="nav nav-pills justify-content-end">
                    <li class="nav-item mr-2 mr-md-0" data-toggle="chart" data-target="#chart-sales-dark" data-update='{"data":{"datasets":[{"data":[0, 20, 10, 30, 15, 40, 20, 60, 60]}]}}' data-prefix="$" data-suffix="k">
                      <a href="#" class="nav-link py-2 px-3 active" data-toggle="tab">
                        <span class="d-none d-md-block">Month</span>
                        <span class="d-md-none">M</span>
                      </a>
                    </li>
                    <li class="nav-item" data-toggle="chart" data-target="#chart-sales-dark" data-update='{"data":{"datasets":[{"data":[0, 20, 5, 25, 10, 30, 15, 40, 40]}]}}' data-prefix="$" data-suffix="k">
                      <a href="#" class="nav-link py-2 px-3" data-toggle="tab">
                        <span class="d-none d-md-block">Week</span>
                        <span class="d-md-none">W</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            <div class="card-body">
              <!-- Chart -->
              <div class="chart">
                <!-- Chart wrapper -->
                <canvas id="chart-sales-dark" class="chart-canvas"></canvas>
              </div>
            </div>
          </div>
        </div>
        <div class="col-xl-4" hidden>
          <div class="card">
            <div class="card-header bg-transparent">
              <div class="row align-items-center">
                <div class="col">
                  <h6 class="text-uppercase text-muted ls-1 mb-1">Performance</h6>
                  <h5 class="h3 mb-0">Доходы</h5>
                </div>
              </div>
            </div>
            <div class="card-body">
              <!-- Chart -->
              <div class="chart">
                <canvas id="chart-bars" class="chart-canvas"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
      {% if spendings %}
        <div class="col-xl-8">
          <div class="card">
            <div class="card-header border-0">
              <div class="row align-items-center">
                <div class="col">
                  <h3 class="mb-0">Расходы</h3>
                </div>
                <div class="col text-right">
                  <a href="#!" class="btn btn-sm btn-primary">Фильтры</a>
                </div>
              </div>
            </div>
            <div class="table-responsive">
              <table class="table align-items-center table-flush">
                <thead class="thead-light">
                  <tr>
                    <th scope="col">Категрия</th>
                    <th scope="col">Сумма</th>
                    <th scope="col">Дата и время</th>
                    <th scope="col"></th>
                  </tr>
                </thead>
                <tbody class="list">
                  {% for operation in spendings %}
                      <tr>
                        <th scope="row">
                            {% if operation.type == 'T' %}
                                {% if operation.fromFinancialInstrumentID == bankAccount %}
                                    Перевод на счёт: {{ operation.toFinancialInstrumentID.name }}
                                {% else %}
                                    Перевод со счёта: {{ operation.fromFinancialInstrumentID.name }}
                                {% endif %}
                            {% elif operation.type == 'I' or operation.type == 'S' %}
                                {{ operation.categoryID.name }}
                            {% endif %}
                        </th>
                        <td class="budget {% if operation.type == 'I' %} text-green {% elif operation.type == 'S' %} text-red {% else %} text-blue {% endif %}">
                          {% if operation.type == 'I' or operation.toFinancialInstrumentID == bankAccount %}+{% elif operation.type == 'S' or operation.toFinancialInstrumentID != bankAccount %}-{% endif %}{{ operation.sum }} {{ operation.currency }}
                        </td>
                        <td>
                          {{ operation.dateTime }}
                        </td>
                        <td class="text-right">
                          <div class="dropdown">
                            <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                              <i class="fas fa-ellipsis-v"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                              <a class="dropdown-item" href="#">Удалить</a>
                              <a class="dropdown-item" href="#">Редактировать</a>
                            </div>
                          </div>
                        </td>
                      </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      {% endif %}
      {% if incomes %}
        <div class="col-xl-4">
          <div class="card">
            <div class="card-header border-0">
              <div class="row align-items-center">
                <div class="col">
                  <h3 class="mb-0">Доходы</h3>
                </div>
                <div class="col text-right">
                  <a href="#!" class="btn btn-sm btn-primary">Фильтры</a>
                </div>
              </div>
            </div>
            <div class="table-responsive">
              <!-- Projects table -->
              <table class="table align-items-center table-flush">
                <thead class="thead-light">
                  <tr>
                    <th scope="col">Категрия</th>
                    <th scope="col">Сумма</th>
                    <th scope="col">Дата и время</th>
                    <th scope="col"></th>
                  </tr>
                </thead>
                <tbody class="list">
                  {% for operation in incomes %}
                      <tr>
                        <th scope="row">
                            {% if operation.type == 'T' %}
                                {% if operation.fromFinancialInstrumentID == bankAccount %}
                                    Перевод на счёт: {{ operation.toFinancialInstrumentID.name }}
                                {% else %}
                                    Перевод со счёта: {{ operation.fromFinancialInstrumentID.name }}
                                {% endif %}
                            {% elif operation.type == 'I' or operation.type == 'S' %}
                                {{ operation.categoryID.name }}
                            {% endif %}
                        </th>
                        <td class="budget {% if operation.type == 'I' %} text-green {% elif operation.type == 'S' %} text-red {% else %} text-blue {% endif %}">
                          {% if operation.type == 'I' or operation.toFinancialInstrumentID == bankAccount %}+{% elif operation.type == 'S' or operation.toFinancialInstrumentID != bankAccount %}-{% endif %}{{ operation.sum }} {{ operation.currency }}
                        </td>
                        <td>
                          {{ operation.dateTime }}
                        </td>
                        <td class="text-right">
                          <div class="dropdown">
                            <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                              <i class="fas fa-ellipsis-v"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                              <a class="dropdown-item" href="#">Удалить</a>
                              <a class="dropdown-item" href="#">Редактировать</a>
                            </div>
                          </div>
                        </td>
                      </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      {% endif %}
      </div>
      <!-- Footer
      <footer class="footer pt-0">
        <div class="row align-items-center justify-content-lg-between">
          <div class="col-lg-6">
            <div class="copyright text-center  text-lg-left  text-muted">
              &copy; 2020 <a href="https://www.creative-tim.com" class="font-weight-bold ml-1" target="_blank">Creative Tim</a>
            </div>
          </div>
          <div class="col-lg-6">
            <ul class="nav nav-footer justify-content-center justify-content-lg-end">
              <li class="nav-item">
                <a href="https://www.creative-tim.com" class="nav-link" target="_blank">Creative Tim</a>
              </li>
              <li class="nav-item">
                <a href="https://www.creative-tim.com/presentation" class="nav-link" target="_blank">About Us</a>
              </li>
              <li class="nav-item">
                <a href="http://blog.creative-tim.com" class="nav-link" target="_blank">Blog</a>
              </li>
              <li class="nav-item">
                <a href="https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md" class="nav-link" target="_blank">MIT License</a>
              </li>
            </ul>
          </div>
        </div>
      </footer>-->
    </div>
  </div>
  <!-- Argon Scripts -->
  <!-- Core -->
  <script src="{% static "main/vendor/jquery/dist/jquery.min.js" %}"></script>
  <script src="{% static "main/vendor/bootstrap/dist/js/bootstrap.bundle.min.js" %}"></script>
  <script src="{% static "main/vendor/js-cookie/js.cookie.js" %}"></script>
  <script src="{% static "main/vendor/jquery.scrollbar/jquery.scrollbar.min.js" %}"></script>
  <script src="{% static "main/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js" %}"></script>
  <!-- Optional JS -->
  <script src="{% static "main/vendor/chart.js/dist/Chart.min.js" %}"></script>
  <script src="{% static "main/vendor/chart.js/dist/Chart.extension.js" %}"></script>
  <!-- Argon JS -->
  <script src="{% static "main/js/argon.js" %}"></script>
</body>
</html>

- base.html

<!DOCTYPE html>
{% load static %}
<html lang="ru">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="Start your development with a Dashboard for Bootstrap 4.">
  <meta name="author" content="Creative Tim">
  <title>{% block title %}{% endblock %} | Accoutant</title>
  <!-- Favicon -->
  <link rel="icon" href="{% static "main/img/brand/favicon.png" %}" type="image/png">
  <!-- Fonts -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700">
  <!-- Icons -->
  <link rel="stylesheet" href="{% static "main/vendor/nucleo/css/nucleo.css" %}" type="text/css">
  <link rel="stylesheet" href="{% static "main/vendor/@fortawesome/fontawesome-free/css/all.min.css" %}" type="text/css">
  <!-- Page plugins -->
  <!-- Argon CSS -->
  <link rel="stylesheet" href="{% static "main/css/argon.css" %}" type="text/css">
</head>
<body>
  <!-- Sidenav -->
  <nav class="sidenav navbar navbar-vertical  fixed-left  navbar-expand-xs navbar-light bg-white" id="sidenav-main">
    <div class="scrollbar-inner">
      <!-- Brand -->
      <div class="sidenav-header  align-items-center">
        <a class="navbar-brand" href="{% url 'main' %}">
          <img src="{% static "main/img/brand/blue.png" %}" class="navbar-brand-img" alt="...">
        </a>
      </div>
      <div class="navbar-inner">
        <!-- Collapse -->
        <div class="collapse navbar-collapse" id="sidenav-collapse-main">
          <!-- Nav items -->
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link {% block mainActive %}{% endblock %}" href="{% url 'main' %}">
                <i class="fas fa-home text-primary"></i>
                <span class="nav-link-text">Главная</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link {% block accountingActive %}{% endblock %}" href="{% url 'bank-accounts-page' %}">
                <i class="ni ni-briefcase-24 text-primary"></i>
                <span class="nav-link-text">Банковские счета</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link {% block stocksActive %}{% endblock %}" href="{% url 'broker-accounts-page' %}">
                <i class="ni ni-chart-bar-32 text-primary"></i>
                <span class="nav-link-text">Брокерские счета</span>
              </a>
            </li>
            {% if not user.is_authenticated %}
            <li class="nav-item">
              <a class="nav-link" href="{% url 'login' %}">
                <i class="ni ni-key-25 text-primary"></i>
                <span class="nav-link-text">Войти</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="{% url 'registration' %}">
                <i class="ni ni-circle-08 text-primary"></i>
                <span class="nav-link-text">Зарегистрироваться</span>
              </a>
            </li>
            {% else %}
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="ni ni-single-02 text-primary"></i>
                <span class="nav-link-text">Профиль</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="ni ni-settings-gear-65 text-primary"></i>
                <span class="nav-link-text">Настройки</span>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="{% url 'logout' %}">
                <i class="ni ni-user-run text-primary"></i>
                <span class="nav-link-text">Выйти</span>
              </a>
            </li>
            {% endif %}
          </ul>
          </ul>
        </div>
      </div>
    </div>
  </nav>
  <!-- Main content -->
  <div class="main-content" id="panel">
    
    <!-- Header -->
    <!-- Header -->
    <div class="header bg-primary pb-6">
        <nav class="navbar navbar-top navbar-expand navbar-dark bg-primary">
      <div class="container-fluid">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <!-- Search form -->
          <div class="col-lg-6 col-7">
              <nav aria-label="breadcrumb" class="d-none d-md-inline-block ml-md-4">
                <ol class="breadcrumb breadcrumb-links breadcrumb-dark">
                  <li class="breadcrumb-item"><a href="{% url 'main' %}"><i class="fas fa-home"></i></a></li>
                    {% block breadCrum %}{% endblock %}
                  <!--<li class="breadcrumb-item"><a href="#">Components</a></li>
                  <li class="breadcrumb-item active" aria-current="page">Icons</li>-->
                </ol>
              </nav>
            </div>
          <!-- Navbar links -->
          <ul class="navbar-nav align-items-center  ml-md-auto ">
            <li class="nav-item d-xl-none">
              <!-- Sidenav toggler -->
              <div class="pr-3 sidenav-toggler sidenav-toggler-dark" data-action="sidenav-pin" data-target="#sidenav-main">
                <div class="sidenav-toggler-inner">
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                </div>
              </div>
            </li>
          </ul>
          {% if user.is_authenticated %}
          <ul class="navbar-nav align-items-center  ml-auto ml-md-0 ">
            <li class="nav-item dropdown">
              <a class="nav-link pr-0" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <div class="media align-items-center">
                  <span class="avatar avatar-sm rounded-circle">
                    <img alt="Image placeholder" src="/media/me-round.png">
                  </span>
                  <div class="media-body  ml-2  d-none d-lg-block">
                    <span class="mb-0 text-sm  font-weight-bold">Иван Днепров</span>
                  </div>
                </div>
              </a>
              <div class="dropdown-menu dropdown-menu-right">
                <a href="#!" class="dropdown-item">
                  <i class="ni ni-single-02"></i>
                  <span>Профиль</span>
                </a>
                <a href="#!" class="dropdown-item">
                  <i class="ni ni-settings-gear-65"></i>
                  <span>Настройки</span>
                </a>
                <a href="{% url 'logout' %}" class="dropdown-item">
                  <i class="ni ni-user-run"></i>
                  <span>Выйти</span>
                </a>
              </div>
            </li>
          </ul>
          {% endif %}
        </div>
      </div>
    </nav>
    </div>
    <!-- Page content -->
    <div class="container-fluid mt--6">
      <div class="row justify-content-center">
        <div class=" col ">
          <div class="card">
            <div class="card-header bg-transparent">
              <h3 class="mb-0">{% block pagename %}{% endblock %}</h3>
            </div>
            <div class="card-body">
              {% block content %} {% endblock %}
            </div>
          </div>
        </div>
      </div>
      <!-- Footer
      <footer class="footer pt-0">
        <div class="row align-items-center justify-content-lg-between">
          <div class="col-lg-6">
            <div class="copyright text-center  text-lg-left  text-muted">
              &copy; 2020 <a href="https://www.creative-tim.com" class="font-weight-bold ml-1" target="_blank">Creative Tim</a>
            </div>
          </div>
          <div class="col-lg-6">
            <ul class="nav nav-footer justify-content-center justify-content-lg-end">
              <li class="nav-item">
                <a href="https://www.creative-tim.com" class="nav-link" target="_blank">Creative Tim</a>
              </li>
              <li class="nav-item">
                <a href="https://www.creative-tim.com/presentation" class="nav-link" target="_blank">About Us</a>
              </li>
              <li class="nav-item">
                <a href="http://blog.creative-tim.com" class="nav-link" target="_blank">Blog</a>
              </li>
              <li class="nav-item">
                <a href="https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md" class="nav-link" target="_blank">MIT License</a>
              </li>
            </ul>
          </div>
        </div>
      </footer>-->
    </div>
  </div>
  <!-- Argon Scripts -->
  <!-- Core -->
  <script src="{% static "main/vendor/jquery/dist/jquery.min.js" %}"></script>
  <script src="{% static "main/vendor/bootstrap/dist/js/bootstrap.bundle.min.js" %}"></script>
  <script src="{% static "main/vendor/js-cookie/js.cookie.js" %}"></script>
  <script src="{% static "main/vendor/jquery.scrollbar/jquery.scrollbar.min.js" %}"></script>
  <script src="{% static "main/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js" %}"></script>
  <!-- Optional JS -->
  <script src="{% static "main/vendor/clipboard/dist/clipboard.min.js" %}"></script>
  <!-- Argon JS -->
  <script src="{% static "main/js/argon.js" %}"></script>
</body>
</html>



templates/accounting:
- accounts.html

{% extends 'accounts.html' %}
{% block mainActive %}{% endblock %}
{% block bankAccounts %}{{ bankActive }}{% endblock %}
{% block brokerAccounts %}{{ brokerActive }}{% endblock %}
{% block title %} {{ title }} {% endblock %}
{% block breadCrumb %}
    <li class="breadcrumb-item active" aria-current="page"> {{ title }} </li>
{% endblock %}
- brokerAccount.html

{% extends 'base.html' %}
{% block title %}
    {{ account.name }}
{% endblock %}
{% block breadCrum %}
    <li class="breadcrumb-item"><a href="#">Брокерские счета</a></li>
    <li class="breadcrumb-item active" aria-current="page">{{ account.name }}</li>
{% endblock %}
{% block pagename %}
    Информация по счёту
{% endblock %}
<small>Счет</small> {{ account.name }} <small>в банке</small> {{ account.contractID.bankID.name }}
{% block content %}
    <h1>{{ account.name }}</h1>
    Сумарная стоимость активов: {{ balance }} {{ symbol }}<h1></h1>
    <br>
    <h3>
        Добавить&nbsp;
        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span id="operationType">покупку</span>
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" id="buy" href="#">покупку</a>
            <a class="dropdown-item" id="sell" href="#">продажу</a>
            <a class="dropdown-item" id="trans" href="#">перевод</a>
            <a class="dropdown-item" id="curr" href="#">валютный счёт</a>
          </div>
        </div>
    </h3>
    <form class="row g-3" method="post" action="" id="buyForm">
        {% csrf_token %}
        <div class="col-auto">
            <input class="form-control" list="datalistOptions1" name="buyTiker" id="exampleDataList" placeholder="Тикер">
            <datalist id="datalistOptions1">
                {%  for stock in stocks %}
                    <option value="{{ stock.stockID.tiker }}"> </option>
                {% endfor %}
                {%  for i in money %}
                    <option value="{{ i.name }}"> </option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" name="buyQuantity" class="form-control" placeholder="Количество" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="buyAvgPrice" class="form-control" placeholder="Стоимость" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="buyCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == account.currency %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить покупку">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="sellForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <input class="form-control" list="datalistOptions1" name="sellTiker" id="exampleDataList" placeholder="Тикер">
            <datalist id="datalistOptions1">
                {%  for stock in stocks %}
                    <option value="{{ stock.stockID.tiker }}"> </option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" name="sellQuantity" class="form-control" placeholder="Количество" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="sellAvgPrice" class="form-control" placeholder="Стоимость" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="sellCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == account.currency %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить продажу">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="transForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="transSum" class="form-control" placeholder="Сумма" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto" {% if moneyQ < 2 %}hidden{% endif %}>
            <div class="input-group mb-3">
                <select class="custom-select" name="fromAcc">
                    <option disabled>Валюта перевода</option>
                    {%  for i in money %}
                        <option {% if i.name == account.currency %}selected{% endif %} value="{{ i.pk }}">{{ i.name }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="toAcc">
                    <option disabled selected>Выберите счёт получатель</option>
                    {% for accountForTransfer in accountsForTransfer %}
                        {% if accountForTransfer.contractID != account %}
                            <option value="{{ accountForTransfer.pk }}">
                                {% if accountForTransfer.type == 'B' %}
                                    Банк {{ accountForTransfer.contractID.bankID.name }}: {{ accountForTransfer.name }}
                                {% else %}
                                    Броккер {{ accountForTransfer.contractID.bankID.name }}: {{ accountForTransfer.contractID.name }}: {{ accountForTransfer.name }}
                                {% endif %}
                            </option>
                        {% endif %}
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить перевод">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="currForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="addCurrency">
                    <option disabled selected>Выберите валютный счёт</option>
                    {% for curCode, curName in CURRENCY_TYPES %}
                        {% if curCode not in currencys %}
                            <option  value="{{ curCode }}">
                                {{ curCode }} {{ curName }}
                            </option>
                        {% endif %}
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить валютный счёт">
        </div>
    </form>
  <script>
    const span = document.getElementById('operationType');
    buy.onclick = function() {
      span.innerHTML = "покупку"
      document.getElementById('buyForm').hidden = false;
      document.getElementById('sellForm').hidden = true;
      document.getElementById('transForm').hidden = true;
      document.getElementById('currForm').hidden = true;
    }
    sell.onclick = function() {
      span.innerHTML = "продажу"
      document.getElementById('buyForm').hidden = true;
      document.getElementById('sellForm').hidden = false;
      document.getElementById('transForm').hidden = true;
      document.getElementById('currForm').hidden = true;
    }
    trans.onclick = function() {
      span.innerHTML = "перевод"
      document.getElementById('buyForm').hidden = true;
      document.getElementById('sellForm').hidden = true;
      document.getElementById('transForm').hidden = false;
      document.getElementById('currForm').hidden = true;
    }
    curr.onclick = function() {
      span.innerHTML = "валютный счёт"
      document.getElementById('buyForm').hidden = true;
      document.getElementById('sellForm').hidden = true;
      document.getElementById('transForm').hidden = true;
      document.getElementById('currForm').hidden = false;
    }
  </script>
    <br>
    <h3>Состав счёта:</h3>
    <div class="table-responsive">
      <table class="table align-items-center table-flush">
        <thead class="thead-light">
          <tr>
            <th scope="col">Тикер</th>
            <th scope="col">Количество</th>
            <th scope="col">Текущая стоимость</th>
            <th scope="col">Изменение цены</th>
            <th scope="col">Доход</th>
          </tr>
        </thead>
        <tbody class="list">
          {% for pk, name, amount, currentValue, priceDelta, isProfitable, earning in stocksTable %}
              <tr>
                <th scope="row">
                  {{ name }}
                </th>
                <td>
                  {{ amount }}
                </td>
                <td>
                  {{ currentValue }}
                </td>
                <td class="{% if isProfitable == True %} text-green {% elif isProfitable == False %} text-red {% endif %}">
                  <i class="fa fa-arrow-{% if isProfitable == True %}up{% elif isProfitable == False %}down{% endif %}"></i>
                  {% if isProfitable == '-' %}
                    -
                  {% else %}
                    {{ priceDelta }} %
                  {% endif %}
                </td>
                <td class="{% if isProfitable == True %} text-green {% elif isProfitable == False %} text-red {% endif %}">
                  <i class="fa fa-arrow-{% if isProfitable == True %}up{% elif isProfitable == False %}down{% endif %}"></i>
                  {% if isProfitable == '-' %}
                    -
                  {% else %}
                    {{ earning }}
                  {% endif %}
                </td>
              </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
{%  endblock %}

- bankAccount.html

{% extends 'base.html' %}
{% block title %}
    {{ bankAccount.name }}
{% endblock %}
{% block breadCrum %}
    <li class="breadcrumb-item"><a href="{% url 'bank-accounts-page' %}">Банковские счета</a></li>
    <li class="breadcrumb-item active" aria-current="page">{{ bankAccount.name }}</li>
{% endblock %}
{% block pagename %}
    Информация по счёту
{% endblock %}
<small>Счет</small> {{ bankAccount.name }} <small>в банке</small> {{ bankAccount.contractID.bankID.name }}
{% block content %}
    <h1>{{ bankAccount.name }}</h1>
    Баланс: {{ balance }} {{ symbol }}<h1></h1>
    <br>
    <h3>
        Добавить&nbsp;
        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span id="operationType">Расходы</span>
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" id="spending" href="#">Расходы</a>
            <a class="dropdown-item" id="income" href="#">Доходы</a>
            <a class="dropdown-item" id="transfer" href="#">Переводы</a>
          </div>
        </div>
    </h3>
    <form class="row g-3" method="post" action="" id="spendingForm">
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="opSum" class="form-control" placeholder="Сумма" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="opCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == bankAccount.currency %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="form-control" list="datalistOptions1" name="opCategory" id="exampleDataList" placeholder="Категория">
            <datalist id="datalistOptions1">
                {%  for category in spendingsCategories %}
                    <option value="{{ category.name }}"> </option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить расход">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="incomeForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="incSum" class="form-control" placeholder="Сумма" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="incCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == bankAccount.currency %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="form-control" list="datalistOptions" name="incCategory" id="exampleDataList" placeholder="Категория">
            <datalist id="datalistOptions">
                {%  for category in incomeCategories %}
                    <option value="{{ category.name }}"> </option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить доход">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="transferForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="transSum" class="form-control" placeholder="Сумма" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="toAcc">
                    <option disabled selected>Выберите счёт получатель</option>
                    {% for account in accounts %}
                        {% if account != bankAccount %}
                                <option value="{{ account.pk }}">
                                    {% if account.type == 'B' %}
                                        Банк {{ account.contractID.bankID.name }}: {{ account.name }}
                                    {% else %}
                                        Брокер  {{ account.contractID.bankID.name }}: {{ account.contractID.name }}: {{ account.currency }}
                                    {% endif %}
                                </option>
                        {% endif %}
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить перевод">
        </div>
    </form>
  <script>
    const span = document.getElementById('operationType');
    spending.onclick = function() {
      document.getElementById('spendingForm').hidden = false;
      document.getElementById('incomeForm').hidden = true;
      document.getElementById('transferForm').hidden = true;
      span.innerHTML = "Расходы"
    }
    income.onclick = function() {
      document.getElementById('spendingForm').hidden = true;
      document.getElementById('incomeForm').hidden = false;
      document.getElementById('transferForm').hidden = true;
      span.innerHTML = "Доходы"
    }
    transfer.onclick = function() {
      document.getElementById('spendingForm').hidden = true;
      document.getElementById('incomeForm').hidden = true;
      document.getElementById('transferForm').hidden = false;
      span.innerHTML = "Переводы"
    }
  </script>
    <br>{% if operationsLen != 0 %}
    <h3>Операции по счёту:</h3>
    <div class="table-responsive">
      <table class="table align-items-center table-flush">
        <thead class="thead-light">
          <tr>
            <th scope="col">Категрия</th>
            <th scope="col">Сумма</th>
            <th scope="col">Дата и время</th>
            <th scope="col"></th>
          </tr>
        </thead>
        <tbody class="list">
          {% for operation in operations %}
              <tr>
                <th scope="row">
                    {% if operation.type == 'T' %}
                        {% if operation.fromFinancialInstrumentID == bankAccount %}
                            {% if operation.toFinancialInstrumentID.type == 'B' %}
                                Перевод на счёт <a href="{% url 'bank-accounts' operation.toFinancialInstrumentID.pk %}">{{ operation.toFinancialInstrumentID.name }}</a> в банке {{ operation.toFinancialInstrumentID.contractID.bankID.name }}
                            {% else %}
                                Перевод на счёт <a href="{% url 'broker-accounts' operation.toFinancialInstrumentID.contractID.pk %}">{{ operation.toFinancialInstrumentID.contractID.name }}</a> брокера {{ operation.toFinancialInstrumentID.contractID.bankID.name }}
                            {% endif %}
                        {% else %}
                            {% if operation.fromFinancialInstrumentID.type == 'B' %}
                                Перевод со счёта <a href="{% url 'bank-accounts' operation.fromFinancialInstrumentID.pk %}">{{ operation.fromFinancialInstrumentID.name }}</a> в банке {{ operation.fromFinancialInstrumentID.contractID.bankID.name }}
                            {% else %}
                                Перевод со счёта <a href="{% url 'broker-accounts' operation.fromFinancialInstrumentID.contractID.pk %}">{{ operation.fromFinancialInstrumentID.contractID.name }}</a> брокера {{ operation.fromFinancialInstrumentID.contractID.bankID.name }}
                            {% endif %}
                        {% endif %}
                    {% elif operation.type == 'I' or operation.type == 'S' %}
                        {{ operation.categoryID.name }}
                    {% endif %}
                </th>
                <td class="budget {% if operation.type == 'I' %} text-green {% elif operation.type == 'S' %} text-red {% else %} text-blue {% endif %}">
                  {% if operation.type == 'I' or operation.toFinancialInstrumentID == bankAccount %}+{% elif operation.type == 'S' or operation.toFinancialInstrumentID != bankAccount %}-{% endif %}{{ operation.sum }} {{ operation.currency }}
                </td>
                <td>
                  {{ operation.dateTime }}
                </td>
                <td class="text-right">
                  <div class="dropdown">
                    <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <i class="fas fa-ellipsis-v"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                      <a class="dropdown-item" href="#">Удалить</a>
                      <a class="dropdown-item" href="#">Редактировать</a>
                    </div>
                  </div>
                </td>
              </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
    {% endif %}
{%  endblock %}

- newAccount.html

{% extends 'base.html' %}
{% block title %}
    Новый счёт
{% endblock %}
{% block breadCrum %}
    <li class="breadcrumb-item" id="bank"><a href="#">Банковские счета</a></li>
    <li class="breadcrumb-item" id="broker" hidden><a href="#">Брокерские счета</a></li>
    <li class="breadcrumb-item active" aria-current="page">Новый счёт</li>
{% endblock %}
{% block pagename %}
    Новый счёт:
{% endblock %}
{% block content %}
    <h3>
        Добавим новый&nbsp;
        <div class="dropdown">
          <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span id="accountType">банковский</span>
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" id="banking" href="#">банковский</a>
            <a class="dropdown-item" id="brokerage" href="#">брокерский</a>
          </div>
        </div>
         счёт
    </h3>
    <form class="row g-3" method="post" action="" id="bankForm">
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="text" name="bsName" class="form-control" placeholder="Название счёта" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="bsBalance" class="form-control" placeholder="Текущий баланс" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="bsCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == 'RUB' %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="form-control" list="datalistOptions1" name="bankName" id="exampleDataList" placeholder="Банк">
            <datalist id="datalistOptions1">
                {% for bank in banks %}
                    <option value="{{ bank.name }}"></option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить счёт">
        </div>
    </form>
    <form class="row g-3" method="post" action="" id="brokerForm" hidden>
        {% csrf_token %}
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="text" name="isName" class="form-control" placeholder="Название счёта" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <input type="number" step="0.01" name="isBalance" class="form-control" placeholder="Текущий баланс" maxlength="50" required="">
            </div>
        </div>
        <div class="col-auto">
            <div class="input-group mb-3">
                <select class="custom-select" name="isCurrency">
                    {% for curCode, curName in CURRENCY_TYPES %}
                        <option {% if curCode == 'RUB' %} selected {% endif %} value="{{ curCode }}">
                            {{ curCode }} {{ curName }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-auto">
            <input class="form-control" list="datalistOptions1" name="brokerName" id="exampleDataList" placeholder="Брокер">
            <datalist id="datalistOptions1">
                {% for bank in banks %}
                    <option value="{{ bank.name }}"></option>
                {% endfor %}
            </datalist>
        </div>
        <div class="col-auto">
            <input class="btn btn-primary" type="submit" value="Добавить счёт">
        </div>
    </form>
    <h1></h1><br>
    <h3><span id="bankText">Банковских счетов у вас сейчас {{ bankAccountsNum }}</span><span id="brokerText" hidden>Брокерских счетов у вас сейчас {{ brokerAccountsNum }}</span>:</h3>
    <div class="table-responsive">
    {% if bankAccountsNum != 0 %}
      <table class="table align-items-center table-flush" id="bankTable">
        <thead class="thead-light">
          <tr>
            <th scope="col">Название</th>
            <th scope="col">Баланс</th>
            <th scope="col">Банк</th>
            <th scope="col"></th>
          </tr>
        </thead>
        <tbody class="list">
          {% for account, color in bankAccountsColor %}
              <tr>
                <th scope="row">
                  <a href="{% url 'bank-accounts' account.pk %}">{{ account.name }}</a>
                </th>
                <td class="budget text-{{ color }}">
                  {{ account.balance }} {{ account.currency }}
                </td>
                <td>
                  {{ account.contractID.bankID.name }}
                </td>
                <td class="text-right">
                  <div class="dropdown">
                    <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <i class="fas fa-ellipsis-v"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                      <a class="dropdown-item" href="#">Удалить</a>
                      <a class="dropdown-item" href="#">Редактировать</a>
                    </div>
                  </div>
                </td>
              </tr>
          {% endfor %}
        </tbody>
      </table>
      {% endif %}
      {% if brokerAccountsNum != 0 %}
      <table class="table align-items-center table-flush" id="brokerTable" hidden>
        <thead class="thead-light">
          <tr>
            <th scope="col">Название</th>
            <th scope="col">Баланс</th>
            <th scope="col">Брокер</th>
            <th scope="col"></th>
          </tr>
        </thead>
        <tbody class="list">
          {% for account, balance in brokerAccountsBalance %}
              <tr>
                <th scope="row">
                  <a href="{% url 'broker-accounts' account.pk %}">{{ account.name }}</a>
                </th>
                <td class="budget text-{{ color }}">
                  {{ balance }}
                </td>
                <td>
                  {{ account.bankID.name }}
                </td>
                <td class="text-right">
                  <div class="dropdown">
                    <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <i class="fas fa-ellipsis-v"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                      <a class="dropdown-item" href="#">Удалить</a>
                      <a class="dropdown-item" href="#">Редактировать</a>
                    </div>
                  </div>
                </td>
              </tr>
          {% endfor %}
        </tbody>
      </table>
    {% endif %}
    </div>
  <script>
    let span = document.getElementById('accountType');
    banking.onclick = function() {
      span.innerHTML = "банковский"
      document.getElementById('bank').hidden = false;
      document.getElementById('broker').hidden = true;
      document.getElementById('bankForm').hidden = false;
      document.getElementById('brokerForm').hidden = true;
      document.getElementById('bankText').hidden = false;
      document.getElementById('brokerText').hidden = true;
      document.getElementById('bankTable').hidden = false;
      document.getElementById('brokerTable').hidden = true;
    }
    brokerage.onclick = function() {
      span.innerHTML = "брокерский"
      document.getElementById('bank').hidden = true;
      document.getElementById('broker').hidden = false;
      document.getElementById('bankForm').hidden = true;
      document.getElementById('brokerForm').hidden = false;
      document.getElementById('bankText').hidden = true;
      document.getElementById('brokerText').hidden = false;
      document.getElementById('bankTable').hidden = true;
      document.getElementById('brokerTable').hidden = false;
    }
  </script>
{%  endblock %}



templates/registration:
- base.html

<!DOCTYPE html>
{% load static %}
<html lang="ru">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="Start your development with a Dashboard for Bootstrap 4.">
  <meta name="author" content="Creative Tim">
  <title>Войти | Accountant</title>
  <!-- Favicon -->
  <link rel="icon" href="{% static "main/img/brand/favicon.png" %}" type="image/png">
  <!-- Fonts -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700">
  <!-- Icons -->
  <link rel="stylesheet" href="{% static "main/vendor/nucleo/css/nucleo.css" %}" type="text/css">
  <link rel="stylesheet" href="{% static "main/vendor/@fortawesome/fontawesome-free/css/all.min.css" %}" type="text/css">
  <!-- Argon CSS -->
  <link rel="stylesheet" href="{% static "main/css/argon.css" %}" type="text/css">
</head>
<body class="bg-default">
  <!-- Navbar -->
  <nav id="navbar-main" class="navbar navbar-horizontal navbar-transparent navbar-main navbar-expand-lg navbar-light">
    <div class="container">
      <a class="navbar-brand" href="dashboard.html">
        <img src="{% static "main/img/brand/white.png" %}">
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="navbar-collapse navbar-custom-collapse collapse" id="navbar-collapse">
        <div class="navbar-collapse-header">
          <div class="row">
            <div class="col-6 collapse-brand">
              <a href="{% url 'main' %}">
                <img src="{% static "main/img/brand/blue.png" %}">
              </a>
            </div>
            <div class="col-6 collapse-close">
              <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
                <span></span>
                <span></span>
              </button>
            </div>
          </div>
        </div>
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a href="{% url 'main' %}" class="nav-link">
              <span class="nav-link-inner--text">Главная</span>
            </a>
          </li>
          <li class="nav-item">
            <a href="{% url 'accounting' %}" class="nav-link">
              <span class="nav-link-inner--text">Расходы и доходы</span>
            </a>
          </li>
          <li class="nav-item">
            <a href="{% url 'stocks' %}" class="nav-link">
              <span class="nav-link-inner--text">Ценные бумаги</span>
            </a>
          </li>
          <li class="nav-item">
            <a href="{% url 'registration' %}" class="nav-link">
              <span class="nav-link-inner--text">Регистрация</span>
            </a>
          </li>
        </ul>
        <hr class="d-lg-none" />
      </div>
    </div>
  </nav>
  <!-- Main content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header bg-gradient-primary py-7 py-lg-8 pt-lg-9">
      <div class="container">
        <div class="header-body text-center mb-5">
          <div class="row justify-content-center">
            <div class="col-xl-5 col-lg-6 col-md-8 px-5">
              <h1 class="text-white">Авторизация</h1>
            </div>
          </div>
        </div>
      </div>
      <div class="separator separator-bottom separator-skew zindex-100">
        <svg x="0" y="0" viewBox="0 0 2560 100" preserveAspectRatio="none" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <polygon class="fill-default" points="2560 0 2560 100 0 100"></polygon>
        </svg>
      </div>
    </div>
    <!-- Page content -->
    <div class="container mt--8 pb-5">
      <div class="row justify-content-center">
        <div class="col-lg-5 col-md-7">
          <div class="card bg-secondary border-0 mb-0">
            <div class="card-body px-lg-5 py-lg-5">
              <div class="text-center text-muted mb-4">
                <small>Введите логин и пароль</small>
              </div>
              <form role="form" method="post">
                {% csrf_token %}
                <div class="form-group mb-3">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-circle-08"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.username.html_name }}" placeholder="Логин" type="text">
                  </div>
                </div>
                <div class="form-group">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.password.html_name }}" placeholder="Пароль" type="password">
                  </div>
                </div>
                <!--<div class="custom-control custom-control-alternative custom-checkbox">
                  <input class="custom-control-input" id=" customCheckLogin" type="checkbox">
                  <label class="custom-control-label" for=" customCheckLogin">
                    <span class="text-muted">Зпомнить меня</span>
                  </label>
                </div>-->
                <div class="text-center">
                  <button type="submit" class="btn btn-primary my-2">Войти</button>
                  <input type="hidden" name="next" value="{{ next }}">
                </div>
              </form>
            </div>
          </div>
          <div class="row mt-3">
            <div class="col-6">
              <a href="#" class="text-light"><small>Забыли пароль?</small></a>
            </div>
            <div class="col-6 text-right">
              <a href="{% url 'registration' %}" class="text-light"><small>Нет аккаунта?</small></a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Footer -->
  <footer class="py-6" id="footer-main">
    <div class="container">
      <div class="row align-items-center justify-content-xl-between">
        <div class="col-xl-6">
          <div class="copyright text-center text-xl-left text-muted">
            <!--&copy; 2021 Иван Днепров <a href="https://www.creative-tim.com" class="font-weight-bold ml-1" target="_blank">Creative Tim</a>-->
          </div>
        </div>
        <div class="col-xl-6">
          <ul class="nav nav-footer justify-content-center justify-content-xl-end">
            <!--<li class="nav-item">
              <a href="https://www.creative-tim.com" class="nav-link" target="_blank">О проекте</a>
            </li>-->
          </ul>
        </div>
      </div>
    </div>
  </footer>
  <!-- Argon Scripts -->
  <!-- Core -->
  <script src="{% static "main/vendor/jquery/dist/jquery.min.js" %}"></script>
  <script src="{% static "main/vendor/bootstrap/dist/js/bootstrap.bundle.min.js" %}"></script>
  <script src="{% static "main/vendor/js-cookie/js.cookie.js" %}"></script>
  <script src="{% static "main/vendor/jquery.scrollbar/jquery.scrollbar.min.js" %}"></script>
  <script src="{% static "main/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js" %}"></script>
  <!-- Argon JS -->
  <script src="{% static "main/js/argon.js" %}"></script>
</body>
</html>

- login.html

<!DOCTYPE html>
{% load static %}
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="Start your development with a Dashboard for Bootstrap 4.">
  <meta name="author" content="Creative Tim">
  <title>Войти | Accountant</title>
  <!-- Favicon -->
  <link rel="icon" href="{% static "main/img/brand/favicon.png" %}" type="image/png">
  <!-- Fonts -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700">
  <!-- Icons -->
  <link rel="stylesheet" href="{% static "main/vendor/nucleo/css/nucleo.css" %}" type="text/css">
  <link rel="stylesheet" href="{% static "main/vendor/@fortawesome/fontawesome-free/css/all.min.css" %}" type="text/css">
  <!-- Argon CSS -->
  <link rel="stylesheet" href="{% static "main/css/argon.css" %}" type="text/css">
</head>
<body class="bg-default">
  <!-- Navbar -->
  <nav id="navbar-main" class="navbar navbar-horizontal navbar-transparent navbar-main navbar-expand-lg navbar-light">
    <div class="container">
      <a class="navbar-brand" href="{% url 'main' %}">
        <img src="{% static "main/img/brand/white.png" %}">
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="navbar-collapse navbar-custom-collapse collapse" id="navbar-collapse">
        <div class="navbar-collapse-header">
          <div class="row">
            <div class="col-6 collapse-brand">
              <a href="{% url 'main' %}">
                <img src="{% static "main/img/brand/blue.png" %}">
              </a>
            </div>
            <div class="col-6 collapse-close">
              <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
                <span></span>
                <span></span>
              </button>
            </div>
          </div>
        </div>
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a href="{% url 'main' %}" class="nav-link">
              <span class="nav-link-inner--text">Главная</span>
            </a>
          </li>
          <!--<li class="nav-item">
            <a href="{% url 'accounting' %}" class="nav-link">
              <span class="nav-link-inner--text">Расходы и доходы</span>
            </a>
          </li>
          <li class="nav-item">
            <a href="{% url 'stocks' %}" class="nav-link">
              <span class="nav-link-inner--text">Ценные бумаги</span>
            </a>
          </li>-->
          <li class="nav-item">
            <a href="{% url 'registration' %}" class="nav-link">
              <span class="nav-link-inner--text">Регистрация</span>
            </a>
          </li>
        </ul>
        <hr class="d-lg-none" />
      </div>
    </div>
  </nav>
  <!-- Main content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header bg-gradient-primary py-7 py-lg-8 pt-lg-9">
      <div class="container">
        <div class="header-body text-center mb-5">
          <div class="row justify-content-center">
            <div class="col-xl-5 col-lg-6 col-md-8 px-5">
              <h1 class="text-white">Авторизация</h1>
            </div>
          </div>
        </div>
      </div>
      <div class="separator separator-bottom separator-skew zindex-100">
        <svg x="0" y="0" viewBox="0 0 2560 100" preserveAspectRatio="none" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <polygon class="fill-default" points="2560 0 2560 100 0 100"></polygon>
        </svg>
      </div>
    </div>
    <!-- Page content -->
    <div class="container mt--8 pb-5">
      <div class="row justify-content-center">
        <div class="col-lg-5 col-md-7">
          <div class="card bg-secondary border-0 mb-0">
            <div class="card-body px-lg-5 py-lg-5">
              <div class="text-center text-muted mb-4">
                Введите логин и пароль
              </div>
              <form role="form" method="post">
                {% csrf_token %}
                <div class="form-group mb-3">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-circle-08"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.username.html_name }}" placeholder="Логин" type="text">
                  </div>
                </div>
                <div class="form-group">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.password.html_name }}" placeholder="Пароль" type="password">
                  </div>
                </div>
                <!--<div class="custom-control custom-control-alternative custom-checkbox">
                  <input class="custom-control-input" id=" customCheckLogin" type="checkbox">
                  <label class="custom-control-label" for=" customCheckLogin">
                    <span class="text-muted">Зпомнить меня</span>
                  </label>
                </div>-->
                <div class="text-center">
                  <button type="submit" class="btn btn-primary my-2">Войти</button>
                  <input type="hidden" name="next" value="{{ next }}">
                </div>
              </form>
            </div>
          </div>
          <div class="row mt-3">
            <div class="col-6">
              <a href="#" class="text-light"><small>Забыли пароль?</small></a>
            </div>
            <div class="col-6 text-right">
              <a href="{% url 'registration' %}" class="text-light"><small>Нет аккаунта?</small></a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Footer -->
  <footer class="py-6" id="footer-main">
    <div class="container">
      <div class="row align-items-center justify-content-xl-between">
        <div class="col-xl-6">
          <div class="copyright text-center text-xl-left text-muted">
            <!--&copy; 2021 Иван Днепров <a href="https://www.creative-tim.com" class="font-weight-bold ml-1" target="_blank">Creative Tim</a>-->
          </div>
        </div>
        <div class="col-xl-6">
          <ul class="nav nav-footer justify-content-center justify-content-xl-end">
            <!--<li class="nav-item">
              <a href="https://www.creative-tim.com" class="nav-link" target="_blank">О проекте</a>
            </li>-->
          </ul>
        </div>
      </div>
    </div>
  </footer>
  <!-- Argon Scripts -->
  <!-- Core -->
  <script src="{% static "main/vendor/jquery/dist/jquery.min.js" %}"></script>
  <script src="{% static "main/vendor/bootstrap/dist/js/bootstrap.bundle.min.js" %}"></script>
  <script src="{% static "main/vendor/js-cookie/js.cookie.js" %}"></script>
  <script src="{% static "main/vendor/jquery.scrollbar/jquery.scrollbar.min.js" %}"></script>
  <script src="{% static "main/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js" %}"></script>
  <!-- Argon JS -->
  <script src="{% static "main/js/argon.js" %}"></script>
</body>
</html>

- registration.html

<!DOCTYPE html>
{% load static %}
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="Start your development with a Dashboard for Bootstrap 4.">
  <meta name="author" content="Creative Tim">
  <title>Регистрация | Accountant</title>
  <!-- Favicon -->
  <link rel="icon" href="{% static "main/img/brand/favicon.png" %}" type="image/png">
  <!-- Fonts -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700">
  <!-- Icons -->
  <link rel="stylesheet" href="{% static "main/vendor/nucleo/css/nucleo.css" %}" type="text/css">
  <link rel="stylesheet" href="{% static "main/vendor/@fortawesome/fontawesome-free/css/all.min.css" %}" type="text/css">
  <!-- Argon CSS -->
  <link rel="stylesheet" href="{% static "main/css/argon.css" %}" type="text/css">
</head>
<body class="bg-default">
  <!-- Navbar -->
  <nav id="navbar-main" class="navbar navbar-horizontal navbar-transparent navbar-main navbar-expand-lg navbar-light">
    <div class="container">
      <a class="navbar-brand" href="{% url 'main' %}">
        <img src="{% static "main/img/brand/white.png" %}">
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="navbar-collapse navbar-custom-collapse collapse" id="navbar-collapse">
        <div class="navbar-collapse-header">
          <div class="row">
            <div class="col-6 collapse-brand">
              <a href="{% url 'main' %}">
                <img src="{% static "main/img/brand/blue.png" %}">
              </a>
            </div>
            <div class="col-6 collapse-close">
              <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#navbar-collapse" aria-controls="navbar-collapse" aria-expanded="false" aria-label="Toggle navigation">
                <span></span>
                <span></span>
              </button>
            </div>
          </div>
        </div>
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a href="{% url 'main' %}" class="nav-link">
              <span class="nav-link-inner--text">Главная</span>
            </a>
          </li>
          <!--<li class="nav-item">
            <a href="{% url 'accounting' %}" class="nav-link">
              <span class="nav-link-inner--text">Расходы и доходы</span>
            </a>
          </li>
          <li class="nav-item">
            <a href="{% url 'stocks' %}" class="nav-link">
              <span class="nav-link-inner--text">Ценные бумаги</span>
            </a>
          </li>-->
          <li class="nav-item">
            <a href="{% url 'login' %}" class="nav-link">
              <span class="nav-link-inner--text">Войти</span>
            </a>
          </li>
        </ul>
        <hr class="d-lg-none" />
      </div>
    </div>
  </nav>
  <!-- Main content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header bg-gradient-primary py-7 py-lg-8 pt-lg-9">
      <div class="container">
        <div class="header-body text-center mb-5">
          <div class="row justify-content-center">
            <div class="col-xl-5 col-lg-6 col-md-8 px-5">
              <h1 class="text-white">Регистрация</h1>
            </div>
          </div>
        </div>
      </div>
      <div class="separator separator-bottom separator-skew zindex-100">
        <svg x="0" y="0" viewBox="0 0 2560 100" preserveAspectRatio="none" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <polygon class="fill-default" points="2560 0 2560 100 0 100"></polygon>
        </svg>
      </div>
    </div>
    <!-- Page content -->
    <div class="container mt--8 pb-5">
      <!-- Table -->
      <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
          <div class="card bg-secondary border-0">
            <div class="card-body px-lg-5 py-lg-5">
              <div class="text-center text-muted mb-4">
                Придумайте сложный пароль
                {% if form.errors %}
                  <div class="alert alert-danger" role="alert">{{ form.errors }}</div>
                {% endif %}
              </div>
              <form role="form" method="post" action="{% url 'registration' %}">
                {% csrf_token %}
                <div class="form-group">
                  <!--<div class="input-group input-group-merge input-group-alternative mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-hat-3"></i></span>
                    </div>
                    <input class="form-control" placeholder="Имя" type="text">
                  </div>-->
                </div>
                <div class="form-group">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-circle-08"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.username.html_name }}" placeholder="Логин" type="text">
                  </div>
                </div>
                <div class="form-group">
                  <div class="input-group input-group-merge input-group-alternative">
                    <div class="input-group-prepend">
                      <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                    </div>
                    <input class="form-control" name="{{ form.password1.html_name }}" placeholder="Придумайте пароль" type="password">
                    <input class="form-control" name="{{ form.password2.html_name }}" placeholder="Повторите его" type="password">
                  </div>
                </div>
                <!--<div class="text-muted font-italic"><small>password strength: <span class="text-success font-weight-700">strong</span></small></div>
                <div class="row my-4">
                  <div class="col-12">
                    <div class="custom-control custom-control-alternative custom-checkbox">
                      <input class="custom-control-input" id="customCheckRegister" type="checkbox">
                      <label class="custom-control-label" for="customCheckRegister">
                        <span class="text-muted">I agree with the <a href="#!">Privacy Policy</a></span>
                      </label>
                    </div>
                  </div>
                </div>-->
                <div class="text-center">
                  <button type="submit" class="btn btn-primary mt-4">Создать аккаунт</button>
                </div>
              </form>
            </div>
          </div>
          <div class="row mt-3">
            <div class="col-6">
              <a href="#" class="text-light"><small>Забыли пароль?</small></a>
            </div>
            <div class="col-6 text-right">
              <a href="{% url 'login' %}" class="text-light"><small>Уже есть аккаунт?</small></a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Footer -->
  <footer class="py-5" id="footer-main">
    <div class="container">
      <div class="row align-items-center justify-content-xl-between">
        <div class="col-xl-6">
          <div class="copyright text-center text-xl-left text-muted">
            <!--&copy; 2021 Днепров Иван <a href="https://www.creative-tim.com" class="font-weight-bold ml-1" target="_blank">Creative Tim</a>-->
          </div>
        </div>
        <div class="col-xl-6">
          <ul class="nav nav-footer justify-content-center justify-content-xl-end">
            <!--<li class="nav-item">
              <a href="https://www.creative-tim.com" class="nav-link" target="_blank">О проекте</a>
            </li>-->
          </ul>
        </div>
      </div>
    </div>
  </footer>
  <!-- Argon Scripts -->
  <!-- Core -->
  <script src="{% static "main/vendor/jquery/dist/jquery.min.js" %}"></script>
  <script src="{% static "main/vendor/bootstrap/dist/js/bootstrap.bundle.min.js" %}"></script>
  <script src="{% static "main/vendor/js-cookie/js.cookie.js" %}"></script>
  <script src="{% static "main/vendor/jquery.scrollbar/jquery.scrollbar.min.js" %}"></script>
  <script src="{% static "main/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js" %}"></script>
  <!-- Argon JS -->
  <script src="{% static "main/js/argon.js" %}"></script>
</body>
</html>

